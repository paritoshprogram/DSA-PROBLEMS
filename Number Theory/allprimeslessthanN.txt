// You are given a positive integer 'N'. Your task is to return all the prime numbers less than or equal to the 'N'.
Note:
1) A prime number is a number that has only two factors: 1 and the number itself.

2) 1 is not a prime number.
Input Format:
The first line contains an integer 'T', which denotes the number of test cases or queries to be run. Then, the 'T' test cases follow. 

The first line of each test case contains only one integer 'N', as described in the problem statement.
Output Format:
For each test case, return a sequence of integers denoting the prime number less than or equal to 'N' in the increasing order.


vector < int > findAllPrimes(int n) 
{
   bool sieve[n + 1];  vector<int> v;

for(int i=0;i<=n;i++)
{
sieve[i] = true; }
    
sieve[1] = false;

for (int i = 2; i * i<=n; i++)
{
if (sieve[i] == true)
{
for (int j = i*i ; j<=n; j += i)
{
sieve[j] = false ;
    }  
 }
    
}   
for (int i = 2 ;i<= n;i++)
{
if (sieve[i] == true)
{
   v.push_back(i);
}
}
    
    return v;  }