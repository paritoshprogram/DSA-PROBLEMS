 int helper(int n,int k, int **dp)
    {
        
        if(k==0||k==1)
        {
            return k;
        }
        
        if(n==1)
        {
            return k;
        }
        
        if(dp[n][k]!=-1)
        {
            return dp[n][k];
        }
       
        
        int min = INT_MAX;  
        
        for(int i=1;i<=k;i++)
        {
            int temp = max(helper(n-1,i-1,dp),helper(n,k-i,dp));
            
            if(temp<min)
            {
                min=temp;
            }
        }
        
        dp[n][k] = min+1;
        
        return dp[n][k];
    }
    
    int eggDrop(int n, int k) 
    {
        
      int** dp = new int*[n+1];
    for(int i = 0; i <=n; ++i)
    {dp[i] = new int[k+1]; }
    
    
    for(int i=0;i<=n;i++)
       {
           for(int j=0;j<=k;j++)
           {
               dp[i][j]=-1;
           }
       }
    
    int ans = helper(n,k,dp);
    
    return ans;
    
    }