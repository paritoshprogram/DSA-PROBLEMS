// Given an integer N, find and return the count of minimum numbers required to represent N as a sum of squares.
That is, if N is 4, then we can represent it as : {1^2 + 1^2 + 1^2 + 1^2} and {2^2}. The output will be 1, as 1 is the minimum count of numbers required to represent N as sum of squares.
Input format :
The first and the only line of input contains an integer value, 'N'.
 Output format :
Print the minimum count of numbers required.
Constraints :
0 <= n <= 10 ^ 4

Time Limit: 1 sec
Sample Input 1 :
12
Sample Output 1 :
3


#include<climits>



int minCount(int n)
{
	int *ar = new int[n+1];  
    
 ar[1]=1; ar[2]=2; ar[3]=3;  ar[0]=0; 
    
    if(n>3)
    {
    
    for(int i=4;i<=n;i++)
    {
        int res=i;
        for(int j=1;j <= ceil(sqrt(i));j++)
        {
            int temp = j*j;
            if (temp > i)
                break;

            res=min(res,ar[i-temp]+1);
        }
        
        ar[i]=res;
    }
        
    }      
    
 return ar[n];
   
}