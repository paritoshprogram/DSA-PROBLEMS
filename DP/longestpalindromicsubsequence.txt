// Given a String, find the longest palindromic subsequence.


Example 1:

Input:
S = "bbabcbcab"
Output: 7
Explanation: Subsequence "babcbab" is the
longest subsequence which is also a palindrome.


 int helper(string A,int s,int e,int **dp)
  {
      if(s>e){return 0;} 
      
      if(s==e)
     {
         return 1;
     }
     
     if(dp[s][e]!=-1)
     {
         return dp[s][e];
     }
     
     if(A[s]==A[e])
     {
         dp[s][e]=helper(A,s+1,e-1,dp)+2;
         return dp[s][e];
     }
     

         dp[s][e]=  max(helper(A,s+1,e,dp),helper(A,s,e-1,dp));
         
         return dp[s][e];

     
  }
 
    int longestPalinSubseq(string A) {
       
       int n = A.length();
       
      int** dp= new int*[n+1];
for(int i = 0; i <=n; i++)
{
    dp[i] = new int[n+1];  }
       
       for(int i=0;i<=n;i++)
       {
           for(int j=0;j<=n;j++)
           {
               dp[i][j]=-1;
           }
       }
       
       int ans = helper(A,0,n-1,dp);
       
       return ans;
    }