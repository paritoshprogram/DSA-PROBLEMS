//You have been given a queue that can store integers as the data. You are required to write a function that reverses the populated queue itself without using any other data structures.




template <typename T>
class Node {
	public : 
		T data;
		Node<T> *next;

		Node(T data) {
			this -> data = data;
			next = NULL;
		}
};


template <typename T>
class queue {
	Node<T> *head;
	Node<T> *tail;
	int size;

	public : 

	queue() {
		head = NULL;
		tail = NULL;
		size = 0;
	}

	int getSize() {
		return size;
	}

	bool empty() {
		return size == 0;
	}

	void push(T element) {
		Node<T> *newNode = new Node<T>(element);
		if(head == NULL) {
			head = newNode;
			tail = newNode;
		}
		else {
			tail -> next = newNode;
			tail = newNode;
		}
		size++;
	}

	T front() {
		if(empty()) {
			return 0;
		}
		return head -> data;	
	}

	T pop() {
		if(empty()) {
			return 0;
		}
		T ans = head -> data;
		Node<T> *temp = head;
		head = head -> next;
		delete temp;
		size--;
		return ans;
	}
    
    T rear()
    {
        return tail->data;
    }


};







void reverseQueue(queue<int> &input) {
	
    if(input.empty())
    {
        return;
    }
    
    int data=input.front();
    
    input.pop();
    
    reverseQueue(input);
    
    input.push(data);
    

}