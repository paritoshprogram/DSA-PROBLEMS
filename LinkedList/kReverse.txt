//Given a singly linked list of integers, reverse the nodes of the linked list 'k' at a time and return its modified list.
 'k' is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of 'k,' then left-out nodes, in the end, should be reversed as well.


Node *kReverse(Node *head, int k)
{
    if(head==NULL)
    {
        return head;
    }
    
    if(k==1 ||k==0)
    {
        return head;
    }
    
    Node* current = head;
    Node* next = NULL;
    Node* prev = NULL;
    int count = 0;
 
  
    while (current != NULL && count < k) {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
        count++;
    }
 
    
    if (next != NULL)
        head->next = kReverse(next, k);
 
    return prev;
    
}