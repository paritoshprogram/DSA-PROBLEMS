// An island is a small piece of land surrounded by water . A group of islands is said to be connected if we can reach from any given island to any other island in the same group . Given V islands (numbered from 1 to V) and E connections or edges between islands. Can you count the number of connected groups of islands.
Input Format :
The first line of input contains two integers, that denote the value of V and E.
Each of the following E lines contains two integers, that denote that there exists an edge between vertex a and b. 
Output Format :
Print the count the number of connected groups of islands
Constraints :
0 <= V <= 1000
0 <= E <= (V * (V-1)) / 2
0 <= a <= V - 1
0 <= b <= V - 1
Time Limit: 1 second
Sample Input 1:
5 8
0 1
0 4
1 2
2 0
2 4
3 0
3 2
4 3
Sample Output 1:
1 



#include<queue>

#include <iostream>
using namespace std;

int main() {

    int n,m;  int s,e;  int t;  int count=0;  
    
    cin>>n>>m;
    
  
    
    int ar[n][n];  int visited[n];
    
    for(int k=0;k<n;k++){visited[k]=0;}
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
           ar[i][j]=0;
        }
      
    }
    
    
    for(int i=0;i<m;i++)
    {
            cin>>s>>e;
            ar[s][e]=1;
            ar[e][s]=1;   
    }
    
    
    
    for(int x=0;x<n;x++)
    {
    
    queue<int> q;

   if(visited[x]==0) {q.push(x);  count+=1; } 
        
    visited[x]=1;
    
    while(!q.empty())
    {
        t=q.front();
            
        q.pop();
        
        for(int i=0;i<n;i++)
        {
            if(visited[i]==0 && ar[t][i]==1)
            {
                visited[i]=1;
                
                q.push(i);
            }
        }  
       
    }  }
        
     
        cout<<count;
        
  
    
}
   