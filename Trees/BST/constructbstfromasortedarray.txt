// Given a sorted integer array A of size n, which contains all unique elements. You need to construct a balanced BST from this input array. Return the root of constructed BST.
Note: If array size is even, take first mid as root.


BinaryTreeNode<int>* helper(int *input,  int si, int ei)
{
       
    if(si>ei)
    {
        return NULL;
    }
    
    int mid=(ei+si)/2;
    
    BinaryTreeNode<int>* root = new BinaryTreeNode<int> (input[mid]);
    
    
    
   
       root->left=helper(input,si,mid-1);
        
        root->right=helper(input,mid+1,ei);
        
        return root;
           
    
}




BinaryTreeNode<int>* constructTree(int *input, int n) {
    
  BinaryTreeNode<int>* root1;
    
	
    root1=helper(input,0,n-1);
    
    return root1;
 
    
}