// Given an integer sorted array (sorted in increasing order) and an element x, find the x in given array using binary search. Return the index of x.
Return -1 if x is not present in the given array.
Note : If given array size is even, take first mid.
Input format :
Line 1 : Array size
Line 2 : Array elements (separated by space)
Line 3 : x (element to be searched)


// input - input array
// size - length of input array
// element - value to be searched

int helper(int inp[],int start,int end,int ele)
{
    if(end>=start)
    {
    int mid = (start+end)/2;
    
    if(inp[mid]==ele)
       return mid;
    
    if(inp[mid]>ele)
    return helper(inp,start,mid-1,ele);

    return helper(inp,mid+1,end,ele); 
   
        
    } 
    
    return -1;
     
    
}







int binarySearch(int input[], int size, int element) {
   
int pos = helper(input,0,size-1,element);
    
    return pos;
    

}

